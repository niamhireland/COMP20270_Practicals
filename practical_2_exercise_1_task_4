import random 

class Card(object):
    suit = ['Hearts', 'Diamonds', 'Clubs', 'Spades']
    value = ['Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King']

    def __init__(self, suit_idx, value_idx):
        if suit_idx < 0 or suit_idx >= len(Card.suit):
            raise ValueError(f'Invalid suit index: {suit_idx}.')
        if value_idx < 0 or value_idx >= len(Card.value):
            raise ValueError(f'Invalid value index: {value_idx}.')
        
        self.suit = Card.suit[suit_idx]
        self.value = Card.value[value_idx]

    def __str__(self):
        return (f'{self.value} of {self.suit}.')

    def reveal(self):
        return f'{self.value} of {self.suit}'
    
class Deck(object):
    def __init__(self):
        self.cards = [Card(suit_idx, value_idx - 1) for suit_idx in range(4) for value_idx in range(1, 14)]

    def shuffle(self):
        random.shuffle(self.cards)
