import random
from typing import Any

class Card(object):
    suit = ['Clubs', 'Diamonds', 'Hearts', 'Spades']
    value = [None, 'Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'King', 'Queen', 'Jack']

    def __init__(self, suit_idx, value_idx):
        if suit_idx < 0 or suit_idx >= len(Card.suit):
            raise ValueError(f'Invalid suit {suit}')
        if value_idx < 1 or value_idx >= len(Card.value):
            raise ValueError(f'Invalid value {value}')
    
        self.suit = Card.suit[suit_idx]
        self.value = Card.value[value_idx]
    
class Deck(object):
    def __init__(self):
        self.cards = [Card(suit_idx, value_idx) for suit_idx in range(4) for value_idx in range(1, 14)]
        self.shuffle()

    def shuffle(self):
        random.shuffle(self.cards)

    def draw(self):
        if len(self.cards) == 0:
            return None
        return self.cards.pop(0)
    
deck = Deck()

for _ in range(1):
    card = deck.draw()
    if card:
        print (f'Drawn: {card.value} of {card.suit}.')
    else:
        print ('Deck is empty.')
