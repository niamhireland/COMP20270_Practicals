class Card(object):
    suit = ['Clubs', 'Diamonds', 'Hearts', 'Spades']
    value = [None, 'Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'King', 'Queen', 'Jack']

    def __init__(self, suit_idx, value_idx):
        if suit_idx < 0 or suit_idx >= len(Card.suit):
            raise ValueError(f'Invalid suit {suit}')
        if value_idx < 1 or value_idx >= len(Card.value):
            raise ValueError(f'Invalid value {value}')
    
        self.suit = Card.suit[suit_idx]
        self.value = Card.value[value_idx]
    
    def reveal(self):
        return (f'{self.value} of {self.suit}')

card1 = Card(3, 11)
card2 = Card(1, 6)

print (f'Card 1: {card1.value} of {card1.suit}.')
print (f'Card 2: {card2.value} of {card2.suit}.')
print ()
print(f'Card 1 (revealed): {card1.reveal()}')
print(f'Card 2 (revealed): {card2.reveal()}')
